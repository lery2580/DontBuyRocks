{"version":3,"sources":["components/title/titleWidget.tsx","components/form/formWrapWidget.tsx","components/form/labelWidget.tsx","components/form/inputWidget.tsx","page/admin/adminIndex.tsx"],"names":["TitleWidget","props","label","subLable","className","FormWrapWidget","children","LabelWidget","InputWidget","value","disabled","readOnly","placeholder","type","alt","_onChange","onChange","e","persist","AdminIndex","useState","accounts","setAccounts","account","setAccount","to","setto","tokenId","settokenId","_addr","set_addr","numberOfTokens","setnumberOfTokens","_to","set_to","_amount","set_amount","from","setfrom","operator","setoperator","approved","setapproved","baseTokenURI_","setbaseTokenURI_","_value","set_value","_price","set_price","_reserveAmount","set_reserveAmount","_tokenURI","set_tokenURI","newOwner","setnewOwner","owner","setowner","index","setindex","_owner","set_owner","useEffect","a","getAccounts","length","console","log","target","onClick","approve","__value","toast","show","disableAdmin","enableAdmin","flipSaleState","freeze","freezeAll","DBRPrice","price","mint","renounceOwnership","reserveDBRs","safeTransferFrom","_from","_tokenId","setApprovalForAll","setBaseTokenURI","setMaxPurchase","setMaxTokenAmount","setPrice","setReserveAmount","setTokenURI","transferOwnership","withdraw","allFrozen","getERC721Balance","baseTokenURI","totalSupply","getApproved","isApprovedForAll","_owener","maxDBRPurchase","maxDBRs","name","erc721Owner","ownerOf","saleIsActive","symbol","tokenByIndex","tokenURI","walletOfOwner"],"mappings":"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","file":"static/js/7.38436386.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./titleWidget.less\";\ninterface ITitleWidgetProps {\n  label: string;\n  subLable?: string;\n}\nfunction TitleWidget(props: ITitleWidgetProps) {\n  const { label, subLable } = props;\n  return (\n    <div className=\"titleWidget\">\n      <h3>\n        {label} {subLable ? <i>{subLable}</i> : null}\n      </h3>\n    </div>\n  );\n}\nexport default TitleWidget;\n","import React from \"react\";\nimport \"./formWrapWidget.less\";\ninterface IFormWrapWidgetProps {\n  children: JSX.Element[];\n}\nfunction FormWrapWidget(props: IFormWrapWidgetProps) {\n  const { children } = props;\n  return <div className=\"labelWidget\">{children}</div>;\n}\nexport default FormWrapWidget;\n","import React from \"react\";\nimport \"./labelWidget.less\";\ninterface ILabelWidget {\n  label: string;\n  children: JSX.Element;\n}\nfunction LabelWidget(props: ILabelWidget) {\n  const { label, children } = props;\n  return (\n    <div className=\"labelWidget\">\n      <p>{label}</p>\n      {children}\n    </div>\n  );\n}\nexport default LabelWidget;\n","import React, { AllHTMLAttributes, ChangeEventHandler } from \"react\";\nimport \"./inputWidget.less\";\ninterface IInputWidgetProps extends AllHTMLAttributes<HTMLElement> {\n  value: string | ReadonlyArray<string> | number | undefined;\n  placeholder: string;\n  type: string;\n  disabled?: boolean | undefined;\n  readOnly?: boolean | undefined;\n  onChange?: ChangeEventHandler<any> | undefined;\n}\nfunction InputWidget(props: IInputWidgetProps) {\n  const {\n    value,\n    disabled,\n    readOnly,\n    placeholder,\n    type,\n    alt,\n    onChange: _onChange,\n  } = props;\n  return (\n    <div className=\"inputWidget\">\n      <input\n        alt={alt}\n        value={value}\n        readOnly={readOnly}\n        disabled={disabled}\n        placeholder={placeholder}\n        type={type}\n        onChange={(e) => {\n          e.persist();\n          if (_onChange) {\n            _onChange(e);\n          }\n        }}\n      />\n    </div>\n  );\n}\nexport default InputWidget;\n","import React, { useEffect, useState } from \"react\";\n\nimport HeaderWidget from \"@/components/header/headerWidget\";\nimport FooterWidget from \"@/components/footer/footerWidget\";\nimport TitleWidget from \"@/components/title/titleWidget\";\n\nimport FormWrapWidget from \"@/components/form/formWrapWidget\";\nimport LabelWidget from \"@/components/form/labelWidget\";\nimport InputWidget from \"@/components/form/inputWidget\";\nimport BtnWidget from \"@/components/form/btnWidget\";\n\nimport {\n  flipSaleState,\n  getAccounts,\n  approve,\n  disableAdmin,\n  enableAdmin,\n  freeze,\n  freezeAll,\n  mint,\n  renounceOwnership,\n  reserveDBRs,\n  safeTransferFrom,\n  setApprovalForAll,\n  setBaseTokenURI,\n  setMaxPurchase,\n  setMaxTokenAmount,\n  setPrice,\n  setReserveAmount,\n  setTokenURI,\n  transferOwnership,\n  withdraw,\n  getERC721Balance,\n  allFrozen,\n  baseTokenURI,\n  DBRPrice,\n  totalSupply,\n  getApproved,\n  isApprovedForAll,\n  maxDBRPurchase,\n  maxDBRs,\n  name,\n  owner as erc721Owner,\n  ownerOf,\n  saleIsActive,\n  tokenByIndex,\n  symbol,\n  tokenURI,\n  walletOfOwner,\n} from \"@/services/web3\";\n\nimport \"./adminIndex.less\";\nimport toast from \"@/components/toast\";\n\nfunction AdminIndex() {\n  const [accounts, setAccounts] = useState<string[] | null>(null);\n  const [account, setAccount] = useState(\"\");\n\n  // input 变量\n  const [to, setto] = useState(\"\");\n  const [tokenId, settokenId] = useState(\"\");\n  const [_addr, set_addr] = useState(\"\");\n  const [numberOfTokens, setnumberOfTokens] = useState(\"\");\n  const [_to, set_to] = useState(\"\");\n  const [_amount, set_amount] = useState(\"\");\n  const [from, setfrom] = useState(\"\");\n  const [operator, setoperator] = useState(\"\");\n  const [approved, setapproved] = useState(\"\");\n  const [baseTokenURI_, setbaseTokenURI_] = useState(\"\");\n  const [_value, set_value] = useState(\"\");\n  const [_price, set_price] = useState(\"\");\n  const [_reserveAmount, set_reserveAmount] = useState(\"\");\n  const [_tokenURI, set_tokenURI] = useState(\"\");\n  const [newOwner, setnewOwner] = useState(\"\");\n  const [owner, setowner] = useState(\"\");\n  const [index, setindex] = useState(\"\");\n  const [_owner, set_owner] = useState(\"\");\n\n  useEffect(() => {\n    (async () => {\n      setAccounts(await getAccounts());\n    })();\n  }, []);\n  useEffect(() => {\n    if (accounts === null) return;\n    if (accounts.length === 0) return;\n    console.log(accounts);\n    setAccount(accounts[0]);\n  }, [accounts]);\n  return (\n    <div className=\"adminIndex\">\n      <HeaderWidget />\n      <h2>只有管理员才能使用哦</h2>\n      <div className=\"fl\">\n        <TitleWidget label=\"操作\" />\n        <div className=\"contianer\">\n          <FormWrapWidget>\n            <TitleWidget label=\"approve\" />\n            <LabelWidget\n              label=\"to\"\n              children={\n                <InputWidget\n                  value={to}\n                  type=\"text\"\n                  placeholder=\"to  address\"\n                  onChange={(e) => {\n                    setto(e.target.value);\n                  }}\n                />\n              }\n            />\n            <LabelWidget\n              label=\"tokenId\"\n              children={\n                <InputWidget\n                  value={tokenId}\n                  type=\"text\"\n                  placeholder=\"tokenId  uint256\"\n                  onChange={(e) => {\n                    settokenId(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await approve({ to, tokenId, account });\n                toast.show(`approve: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"disableAdmin\" subLable=\"删除管理员\" />\n            <LabelWidget\n              label=\"_addr\"\n              children={\n                <InputWidget\n                  value={_addr}\n                  type=\"text\"\n                  placeholder=\"_addr  address\"\n                  onChange={(e) => {\n                    set_addr(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await disableAdmin({\n                  _addr,\n                  account,\n                });\n                toast.show(`disableAdmin: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"enableAdmin\" subLable=\"添加管理员\" />\n            <LabelWidget\n              label=\"_addr\"\n              children={\n                <InputWidget\n                  value={_addr}\n                  type=\"text\"\n                  placeholder=\"_addr  address\"\n                  onChange={(e) => {\n                    set_addr(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await enableAdmin({\n                  _addr,\n                  account,\n                });\n                toast.show(`enableAdmin: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"flipSaleState\" subLable=\"NFT 开关\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await flipSaleState({\n                  account: account,\n                });\n                toast.show(`flipSaleState: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"freeze\" subLable=\"冻结当前选定tokenId\" />\n            <LabelWidget\n              label=\"tokenId\"\n              children={\n                <InputWidget\n                  value={tokenId}\n                  type=\"text\"\n                  placeholder=\"tokenId  uint256\"\n                  onChange={(e) => {\n                    settokenId(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await freeze({\n                  tokenId,\n                  account,\n                });\n                toast.show(`freeze: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"freezeAll\" subLable=\"冻结所有tokenId\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await freezeAll({\n                  account,\n                });\n                toast.show(`freezeAll: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"mint\" subLable=\"购买DBR\" />\n            <LabelWidget\n              label=\"numberOfTokens\"\n              children={\n                <InputWidget\n                  value={numberOfTokens}\n                  type=\"text\"\n                  placeholder=\"numberOfTokens  uint256\"\n                  onChange={(e) => {\n                    setnumberOfTokens(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const price = await DBRPrice();\n                mint({\n                  numberOfTokens,\n                  price,\n                  account,\n                });\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"renounceOwnership\" subLable=\"放弃所有权\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await renounceOwnership({\n                  account,\n                });\n                toast.show(`renounceOwnership: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"reserveDBRs\" />\n            <LabelWidget\n              label=\"_to\"\n              children={\n                <InputWidget\n                  value={_to}\n                  type=\"text\"\n                  placeholder=\"_to  address\"\n                  onChange={(e) => {\n                    set_to(e.target.value);\n                  }}\n                />\n              }\n            />\n            <LabelWidget\n              label=\"_amount\"\n              children={\n                <InputWidget\n                  value={_amount}\n                  type=\"text\"\n                  placeholder=\"_amount  uint256\"\n                  onChange={(e) => {\n                    set_amount(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await reserveDBRs({\n                  account,\n                  _to,\n                  _amount,\n                });\n                toast.show(`reserveDBRs: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"safeTransferFrom\" subLable=\"tokenid 划转\" />\n            <LabelWidget\n              label=\"from\"\n              children={\n                <InputWidget\n                  value={from}\n                  type=\"text\"\n                  placeholder=\"from  address\"\n                  onChange={(e) => {\n                    setfrom(e.target.value);\n                  }}\n                />\n              }\n            />\n            <LabelWidget\n              label=\"to\"\n              children={\n                <InputWidget\n                  value={to}\n                  type=\"text\"\n                  placeholder=\"to  address\"\n                  onChange={(e) => {\n                    setto(e.target.value);\n                  }}\n                />\n              }\n            />\n            <LabelWidget\n              label=\"tokenId\"\n              children={\n                <InputWidget\n                  value={tokenId}\n                  type=\"text\"\n                  placeholder=\"tokenId  uint246\"\n                  onChange={(e) => {\n                    settokenId(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await safeTransferFrom({\n                  account,\n                  _to: to,\n                  _from: from,\n                  _tokenId: tokenId,\n                });\n                toast.show(`safeTransferFrom: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"setApprovalForAll\" />\n            <LabelWidget\n              label=\"operator\"\n              children={\n                <InputWidget\n                  value={operator}\n                  type=\"text\"\n                  placeholder=\"operator  address\"\n                  onChange={(e) => {\n                    setoperator(e.target.value);\n                  }}\n                />\n              }\n            />\n            <LabelWidget\n              label=\"approved\"\n              children={\n                <InputWidget\n                  value={approved}\n                  type=\"text\"\n                  placeholder=\"approved  bool\"\n                  onChange={(e) => {\n                    setapproved(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await setApprovalForAll({\n                  operator,\n                  approved,\n                  account,\n                });\n                toast.show(`setApprovalForAll: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"setBaseTokenURI\" subLable=\"设置BaseTokenURI\" />\n            <LabelWidget\n              label=\"baseTokenURI_\"\n              children={\n                <InputWidget\n                  value={baseTokenURI_}\n                  type=\"text\"\n                  placeholder=\"baseTokenURI_  string\"\n                  onChange={(e) => {\n                    setbaseTokenURI_(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await setBaseTokenURI({\n                  baseTokenURI_,\n                  account,\n                });\n                toast.show(`setBaseTokenURI: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget\n              label=\"setMaxPurchase\"\n              subLable=\"设置单个钱包最大持有量\"\n            />\n            <LabelWidget\n              label=\"_value\"\n              children={\n                <InputWidget\n                  value={_value}\n                  type=\"text\"\n                  placeholder=\"_value  uint256\"\n                  onChange={(e) => {\n                    set_value(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await setMaxPurchase({\n                  _value,\n                  account,\n                });\n                toast.show(`setMaxPurchase: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"setMaxTokenAmount\" subLable=\"设置NFT最大量\" />\n            <LabelWidget\n              label=\"_value\"\n              children={\n                <InputWidget\n                  value={_value}\n                  type=\"text\"\n                  placeholder=\"_value  uint256\"\n                  onChange={(e) => {\n                    set_value(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await setMaxTokenAmount({\n                  _value,\n                  account,\n                });\n                toast.show(`setMaxTokenAmount: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"setPrice\" subLable=\"设置NFT单个价格（wei）\" />\n            <LabelWidget\n              label=\"_price\"\n              children={\n                <InputWidget\n                  value={_price}\n                  type=\"text\"\n                  placeholder=\"_price  uint256\"\n                  onChange={(e) => {\n                    set_price(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await setPrice({\n                  _price,\n                  account,\n                });\n                toast.show(`setPrice: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"setReserveAmount\" subLable=\"设置NFT预留数量\" />\n            <LabelWidget\n              label=\"_reserveAmount\"\n              children={\n                <InputWidget\n                  value={_reserveAmount}\n                  type=\"text\"\n                  placeholder=\"_reserveAmount  uint256\"\n                  onChange={(e) => {\n                    set_reserveAmount(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await setReserveAmount({\n                  _value,\n                  account,\n                });\n                toast.show(`setReserveAmount: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"setTokenURI\" subLable=\"设置TokenURI\" />\n            <LabelWidget\n              label=\"tokenId\"\n              children={\n                <InputWidget\n                  value={tokenId}\n                  type=\"text\"\n                  placeholder=\"tokenId  uint256\"\n                  onChange={(e) => {\n                    settokenId(e.target.value);\n                  }}\n                />\n              }\n            />\n            <LabelWidget\n              label=\"_tokenURI\"\n              children={\n                <InputWidget\n                  value={_tokenURI}\n                  type=\"text\"\n                  placeholder=\"_tokenURI  string\"\n                  onChange={(e) => {\n                    set_tokenURI(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await setTokenURI({\n                  tokenId,\n                  _tokenURI,\n                  account,\n                });\n                toast.show(`setTokenURI: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            {/*         \n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner); \n        */}\n            <TitleWidget label=\"transferOwnership\" />\n            <LabelWidget\n              label=\"newOwner\"\n              children={\n                <InputWidget\n                  value={newOwner}\n                  type=\"text\"\n                  placeholder=\"newOwner  address\"\n                  onChange={(e) => {\n                    setnewOwner(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await transferOwnership({\n                  newOwner,\n                  account,\n                });\n                toast.show(`transferOwnership: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"withdraw\" subLable=\"提币\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await withdraw({\n                  account,\n                });\n                toast.show(`withdraw: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n        </div>\n      </div>\n      <div className=\"fr\">\n        <TitleWidget label=\"查询\" />\n        <div className=\"contianer\">\n          <FormWrapWidget>\n            <TitleWidget label=\"allFrozen\" subLable=\"nft是否开启\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await allFrozen();\n                toast.show(`allFrozen: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget\n              label=\"balanceOf\"\n              subLable=\"某个地址nft持有的所有tokenId\"\n            />\n            <LabelWidget\n              label=\"owner\"\n              children={\n                <InputWidget\n                  value={owner}\n                  type=\"text\"\n                  placeholder=\"owner  address\"\n                  onChange={(e) => {\n                    setowner(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const _value = await getERC721Balance({\n                  account,\n                });\n                toast.show(`balanceOf ${owner}: ${_value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"baseTokenURI\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await baseTokenURI();\n                toast.show(`baseTokenURI: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"DBRPrice\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const _value = await DBRPrice();\n                toast.show(`DBRPrice: ${_value} wei`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"totalSupply\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const _value = await totalSupply();\n                toast.show(`totalSupply: ${_value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"getApproved\" />\n            <LabelWidget\n              label=\"tokenId\"\n              children={\n                <InputWidget\n                  value={tokenId}\n                  type=\"text\"\n                  placeholder=\"tokenId  uint256\"\n                  onChange={(e) => {\n                    settokenId(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await getApproved(tokenId);\n                toast.show(`getApproved: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            {/* _operatorApprovals[owner][operator]; */}\n            <TitleWidget label=\"isApprovedForAll\" />\n            <LabelWidget\n              label=\"owner\"\n              children={\n                <InputWidget\n                  value={owner}\n                  type=\"text\"\n                  placeholder=\"owner  address\"\n                  onChange={(e) => {\n                    setowner(e.target.value);\n                  }}\n                />\n              }\n            />\n            <LabelWidget\n              label=\"operator\"\n              children={\n                <InputWidget\n                  value={operator}\n                  type=\"text\"\n                  placeholder=\"operator  address\"\n                  onChange={(e) => {\n                    setoperator(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await isApprovedForAll({\n                  _owener: owner,\n                  index,\n                });\n                toast.show(`isApprovedForAll: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"maxDBRPurchase\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await maxDBRPurchase();\n                toast.show(`maxDBRPurchase: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"maxDBRs\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await maxDBRs();\n                toast.show(`maxDBRs: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"name\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await name();\n                toast.show(`name: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n          <FormWrapWidget>\n            <TitleWidget label=\"owner\" subLable=\"当前合约持有者\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await erc721Owner();\n                toast.show(`erc721Owner: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"ownerOf\" subLable=\"当前tokenId持有者\" />\n            <LabelWidget\n              label=\"tokenId\"\n              children={\n                <InputWidget\n                  value={tokenId}\n                  type=\"text\"\n                  placeholder=\"tokenId  address\"\n                  onChange={(e) => {\n                    settokenId(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await ownerOf(tokenId);\n                toast.show(`ownerOf: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"saleIsActive\" subLable=\"NFT是否可交易\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await saleIsActive();\n                toast.show(`saleIsActive: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"symbol\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await symbol();\n                toast.show(`symbol: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget\n              label=\"tokenByIndex\"\n              subLable=\"tokenId index的token URL\"\n            />\n            <LabelWidget\n              label=\"index\"\n              children={\n                <InputWidget\n                  value={index}\n                  type=\"text\"\n                  placeholder=\"index  uint256\"\n                  onChange={(e) => {\n                    setindex(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await tokenByIndex({ index });\n                toast.show(`tokenByIndex: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"tokenURI\" subLable=\" 查询tokenURI\" />\n            <LabelWidget\n              label=\"tokenId\"\n              children={\n                <InputWidget\n                  value={tokenId}\n                  type=\"text\"\n                  placeholder=\"tokenId  uint256\"\n                  onChange={(e) => {\n                    settokenId(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await tokenURI(tokenId);\n                toast.show(`tokenURI: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget label=\"totalSupply\" subLable=\"剩余\" />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await totalSupply();\n                toast.show(`totalSupply: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n\n          <FormWrapWidget>\n            <TitleWidget\n              label=\"walletOfOwner\"\n              subLable=\"所查地址的所有tokenId\"\n            />\n            <LabelWidget\n              label=\"_owner\"\n              children={\n                <InputWidget\n                  value={_owner}\n                  type=\"text\"\n                  placeholder=\"_owner  address\"\n                  onChange={(e) => {\n                    set_owner(e.target.value);\n                  }}\n                />\n              }\n            />\n            <BtnWidget\n              label=\"transact\"\n              onClick={async () => {\n                const __value = await walletOfOwner({ _owner });\n                toast.show(`walletOfOwner: ${__value}`, 5000);\n              }}\n            />\n          </FormWrapWidget>\n        </div>\n      </div>\n      <FooterWidget />\n    </div>\n  );\n}\nexport default AdminIndex;\n"],"sourceRoot":""}