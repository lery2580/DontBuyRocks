{"version":3,"sources":["components/form/btnWidget.tsx","services/web3.ts","components/toast/index.tsx","components/header/headerWidget.tsx","components/footer/footerWidget.tsx"],"names":["BtnWidget","props","label","onClick","className","nftAddress","config","ERC721_ENUMERABLE_ABI","require","ERC721_ABI","DBR","window","ethereum","web3","Web3","enable","portis","Portis","provider","currentProvider","getAccounts","a","Promise","resolve","reject","eth","error","accounts","getETHBalance","address","getBalance","balance","utils","fromWei","ERC721_name","abi","Contract","methods","name","call","ERC721_symbol","symbol","ERC721_tokenURI","tokenId","baseTokenURI","ERC721_price","DBRPrice","ERC721_maxDBRPurchase","maxDBRPurchase","ERC721_maxDBRs","maxDBRs","ERC721_saleIsActive","saleIsActive","ERC721_tokenByIndex","index","tokenByIndex","ERC721_totalSupply","totalSupply","ERC721_owner","owner","ERC721_ownerOf","ownerOf","ERC721_isApprovedForAll","_owener","isApprovedForAll","ERC721_getApproved","getApproved","ERC721_balanceOf","account","balanceOf","ERC721_allfrozen","allfrozen","ERC721_walletOfOwner","_owner","walletOfOwner","ERC721_baseTokenURI","_baseTokenURI","ERC721_mint","numberOfTokens","price","mintDBRs","send","from","value","gas","once","confNumber","receipt","ERC721_flipSaleState","flipSaleState","ERC721_approve","to","approve","ERC721_disableAdmin","_addr","disableAdmin","ERC721_enableAdmin","enableAdmin","ERC721_freeze","freeze","ERC721_freezeAll","freezeAll","ERC721_renounceOwnership","renounceOwnership","ERC721_reserveDBRs","_to","_amount","reserveDBRs","ERC721_safeTransferFrom","_from","_tokenId","safeTransferFrom","ERC721_withdraw","withdraw","ERC721_transferOwnership","newOwner","transferOwnership","ERC721_setTokenURI","_tokenURI","setTokenURI","ERC721_setReserveAmount","_value","setReserveAmount","ERC721_setPrice","_price","setPrice","ERC721_setMaxTokenAmount","setMaxTokenAmount","ERC721_setMaxPurchase","setMaxPurchase","ERC721_setBaseTokenURI","baseTokenURI_","setBaseTokenURI","ERC721_setApprovalForAll","operator","approved","setApprovalForAll","mint","allFrozen","getERC721Balance","tokenURI","div","show","text","mtime","fn","_time","document","createElement","body","appendChild","setTimeout","removeChild","innerHTML","hide","HeaderWidget","href","title","target","rel","FooterWidget","Date","getFullYear"],"mappings":"0JAAA,2BAceA,IARf,SAAmBC,GACjB,IAAQC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,QACf,OACE,yBAAKC,UAAU,YAAYD,QAASA,GACjCD,K,m5CCNCG,E,MAAeC,EAAfD,WAIFE,GAFqBC,EAAQ,KACjBA,EAAQ,KACIA,EAAQ,MAGhCC,GAFaD,EAAQ,KAERA,EAAQ,MACrBE,EAAMF,EAAQ,KAapB,GALIG,OAAOC,WACTD,OAAOE,KAAO,IAAIC,IAAKH,OAAOC,UAC9BD,OAAOC,SAASG,WAGbJ,OAAOE,KAAM,CAChB,IACMG,EAAS,IAAIC,IADH,uCACmB,WACnCN,OAAOE,KAAO,IAAIC,IAAKE,EAAOE,UAGhC,IAAML,EAAO,IAAIC,IAAKH,OAAOE,KAAKM,iBAiC3B,SAAeC,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EACE,IAAIC,SAAQ,SAACC,EAASC,GAC3BX,EAAKY,IAAIL,aAAY,SAACM,EAAOC,GAC3B,OAAID,EAAcF,EAAOE,GAClBH,EAAQI,UAJd,4C,sBASA,SAAeC,EAAtB,kC,4CAAO,WAA6BC,GAA7B,SAAAR,EAAA,+EACE,IAAIC,SAAQ,SAACC,EAASC,GAC3BX,EAAKY,IAAIK,WAAWD,EAAS,UAAU,SAACH,EAAOK,GAC7C,OAAIL,EAAcF,EAAOE,GAClBH,EAAQV,EAAKmB,MAAMC,QAAQF,EAAS,iBAJ1C,4C,+BAuGQG,I,2EAAf,4BAAAb,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQC,OAAOC,QAF5B,4C,+BAKeC,I,2EAAf,4BAAAnB,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQI,SAASF,QAF9B,4C,+BAKeG,E,8EAAf,WAA+BC,GAA/B,eAAAtB,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQO,aAAaD,GAASJ,QAF3C,4C,+BAIeM,I,2EAAf,4BAAAxB,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQS,WAAWP,QAFhC,4C,+BAIeQ,I,2EAAf,4BAAA1B,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQW,iBAAiBT,QAFtC,4C,+BAIeU,I,2EAAf,4BAAA5B,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQa,UAAUX,QAF/B,4C,+BAKeY,I,2EAAf,4BAAA9B,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQe,eAAeb,QAFpC,4C,+BAIec,E,8EAAf,+BAAAhC,EAAA,6DAAqCiC,EAArC,EAAqCA,MAC7BnB,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQkB,aAAaD,GAAOf,QAFzC,4C,+BAQeiB,I,2EAAf,4BAAAnC,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQoB,cAAclB,QAFnC,4C,+BAIemB,I,2EAAf,4BAAArC,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQsB,QAAQpB,QAF7B,4C,+BAKeqB,E,8EAAf,WAA8BjB,GAA9B,eAAAtB,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQwB,QAAQlB,GAASJ,QAFtC,4C,+BAIeuB,E,8EAAf,iCAAAzC,EAAA,6DACE0C,EADF,EACEA,QACAT,EAFF,EAEEA,MAKMnB,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAPhD,kBAQS8B,EAAIE,QAAQ2B,iBAAiBD,EAAST,GAAOf,QARtD,4C,+BAsBe0B,E,8EAAf,WAAkCtB,GAAlC,eAAAtB,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQ6B,YAAYvB,GAASJ,QAF1C,4C,+BAKe4B,E,8EAAf,iCAAA9C,EAAA,6DACE+C,EADF,EACEA,QAIMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS3B,EAAYJ,GALvD,SAMwB8B,EAAIE,QAAQgC,UAAUD,GAAS7B,OANvD,cAMQR,EANR,yBAOSA,GAPT,4C,+BAUeuC,I,2EAAf,4BAAAjD,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS7B,EAAuBF,GADlE,kBAES8B,EAAIE,QAAQkC,YAAYhC,QAFjC,4C,+BAKeiC,E,8EAAf,+BAAAnD,EAAA,6DACEoD,EADF,EACEA,OAIMtC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS7B,EAAuBF,GALlE,kBAMS8B,EAAIE,QAAQqC,cAAcD,GAAQlC,QAN3C,4C,+BAiBeoC,I,2EAAf,4BAAAtD,EAAA,6DACQc,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GADhD,kBAES8B,EAAIE,QAAQuC,gBAAgBrC,QAFrC,4C,+BAgBesC,G,iFAAf,mCAAAxD,EAAA,6DACEyD,EADF,EACEA,eACAC,EAFF,EAEEA,MACAX,EAHF,EAGEA,QAMMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAThD,kBAUS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACD2C,SAASF,GACTG,KAAK,CAAEC,KAAMd,EAASe,OAAQJ,GAASD,EAAgBM,IAAK,MAC5DC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAfrB,4C,+BAmBegE,G,iFAAf,+BAAAnE,EAAA,6DACE+C,EADF,EACEA,QAIMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GALhD,kBAMS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACDoD,gBACAR,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAXrB,4C,+BAcekE,G,iFAAf,mCAAArE,EAAA,6DACEsE,EADF,EACEA,GACAhD,EAFF,EAEEA,QACAyB,EAHF,EAGEA,QAMMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAThD,kBAUS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACDuD,QAAQD,EAAIhD,GACZsC,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAfrB,4C,+BAkBeqE,G,iFAAf,iCAAAxE,EAAA,6DACEyE,EADF,EACEA,MACA1B,EAFF,EAEEA,QAKMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAPhD,kBAQS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACD0D,aAAaD,GACbb,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAbrB,4C,+BAgBewE,G,iFAAf,iCAAA3E,EAAA,6DACEyE,EADF,EACEA,MACA1B,EAFF,EAEEA,QAKMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAPhD,kBAQS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACD4D,YAAYH,GACZb,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAbrB,4C,+BAgBe0E,G,iFAAf,iCAAA7E,EAAA,6DACEsB,EADF,EACEA,QACAyB,EAFF,EAEEA,QAKMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAPhD,kBAQS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACD8D,OAAOxD,GACPsC,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAbrB,4C,+BAgBe4E,G,iFAAf,+BAAA/E,EAAA,6DACE+C,EADF,EACEA,QAIMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GALhD,kBAMS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACDgE,YACApB,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAXrB,4C,+BAce8E,G,iFAAf,+BAAAjF,EAAA,6DACE+C,EADF,EACEA,QAIMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GALhD,kBAMS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACDkE,oBACAtB,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAXrB,4C,+BAcegF,G,iFAAf,mCAAAnF,EAAA,6DACE+C,EADF,EACEA,QACAqC,EAFF,EAEEA,IACAC,EAHF,EAGEA,QAMMvE,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAThD,kBAUS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACDsE,YAAYF,EAAKC,GACjBzB,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAfrB,4C,+BAkBeoF,G,iFAAf,qCAAAvF,EAAA,6DACE+C,EADF,EACEA,QACAqC,EAFF,EAEEA,IACAI,EAHF,EAGEA,MACAC,EAJF,EAIEA,SAOM3E,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAXhD,kBAYS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACD0E,iBAAiBN,EAAKI,EAAOC,GAC7B7B,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAjBrB,4C,+BAoBewF,G,iFAAf,+BAAA3F,EAAA,6DACE+C,EADF,EACEA,QAIMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GALhD,kBAMS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACD4E,WACAhC,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAXrB,4C,+BAee0F,G,iFAAf,iCAAA7F,EAAA,6DACE8F,EADF,EACEA,SACA/C,EAFF,EAEEA,QAKMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAPhD,kBAQS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACD+E,kBAAkBD,GAClBlC,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAbrB,4C,+BAsCe6F,G,iFAAf,mCAAAhG,EAAA,6DACEsB,EADF,EACEA,QACA2E,EAFF,EAEEA,UACAlD,EAHF,EAGEA,QAMMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAThD,kBAUS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACDkF,YAAY5E,EAAS2E,GACrBrC,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAfrB,4C,+BAmBegG,G,iFAAf,iCAAAnG,EAAA,6DACEoG,EADF,EACEA,OACArD,EAFF,EAEEA,QAKMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAPhD,kBAQS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACDqF,iBAAiBD,GACjBxC,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAbrB,4C,+BAiBemG,G,iFAAf,iCAAAtG,EAAA,6DACEuG,EADF,EACEA,OACAxD,EAFF,EAEEA,QAKMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAPhD,kBAQS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACDwF,SAASD,GACT3C,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAbrB,4C,+BAiBesG,G,iFAAf,iCAAAzG,EAAA,6DACEoG,EADF,EACEA,OACArD,EAFF,EAEEA,QAKMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAPhD,kBAQS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACD0F,kBAAkBN,GAClBxC,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAbrB,4C,+BAgBewG,G,iFAAf,iCAAA3G,EAAA,6DACEoG,EADF,EACEA,OACArD,EAFF,EAEEA,QAKMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAPhD,kBAQS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACD4F,eAAeR,GACfxC,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAbrB,4C,+BAgBe0G,G,iFAAf,iCAAA7G,EAAA,6DACE8G,EADF,EACEA,cACA/D,EAFF,EAEEA,QAKMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAPhD,kBAQS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACD+F,gBAAgBD,GAChBlD,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAbrB,4C,+BAkBe6G,G,iFAAf,mCAAAhH,EAAA,6DACEiH,EADF,EACEA,SACAC,EAFF,EAEEA,SACAnE,EAHF,EAGEA,QAMMjC,EAAM,IAAIxB,OAAOE,KAAKY,IAAIW,SAAS1B,EAAKL,GAThD,kBAUS,IAAIiB,SAAQ,SAACC,EAASC,GAC3BW,EAAIE,QACDmG,kBAAkBF,EAAUC,GAC5BtD,KAAK,CAAEC,KAAMd,EAASgB,IAAK,MAC3BC,KAAK,gBAAgB,SAACC,EAAiBC,GAAlB,OAAmChE,OACxD8D,KAAK,QAAS7D,OAfrB,4C,sBAqCO,SAAeoE,GAAtB,mC,8CAAO,iCAAAvE,EAAA,6DACLsE,EADK,EACLA,GACAhD,EAFK,EAELA,QACAyB,EAHK,EAGLA,QAHK,kBASEsB,GAAe,CAAEC,KAAIhD,UAASyB,aAThC,4C,sBAWA,SAAe2B,GAAtB,mC,8CAAO,+BAAA1E,EAAA,6DACLyE,EADK,EACLA,MACA1B,EAFK,EAELA,QAFK,kBAOEyB,GAAoB,CAAEC,QAAO1B,aAP/B,4C,sBAUA,SAAe6B,GAAtB,mC,8CAAO,+BAAA5E,EAAA,6DACLyE,EADK,EACLA,MACA1B,EAFK,EAELA,QAFK,kBAOE4B,GAAmB,CAAEF,QAAO1B,aAP9B,4C,sBAUA,SAAeqB,GAAtB,mC,8CAAO,6BAAApE,EAAA,6DACL+C,EADK,EACLA,QADK,kBAKEoB,GAAqB,CAAEpB,aALzB,4C,sBAQA,SAAe+B,GAAtB,mC,8CAAO,+BAAA9E,EAAA,6DACLsB,EADK,EACLA,QACAyB,EAFK,EAELA,QAFK,kBAOE8B,GAAc,CAAEvD,UAASyB,aAP3B,4C,sBAUA,SAAeiC,GAAtB,mC,8CAAO,6BAAAhF,EAAA,6DACL+C,EADK,EACLA,QADK,kBAKEgC,GAAiB,CAAEhC,aALrB,4C,sBAQA,SAAeqE,GAAtB,mC,8CAAO,iCAAApH,EAAA,6DACLyD,EADK,EACLA,eACAC,EAFK,EAELA,MACAX,EAHK,EAGLA,QAHK,kBASES,GAAY,CAAEC,iBAAgBV,UAASW,WATzC,4C,sBAYA,SAAewB,GAAtB,mC,8CAAO,6BAAAlF,EAAA,6DACL+C,EADK,EACLA,QADK,kBAKEkC,GAAyB,CAAElC,aAL7B,4C,sBAQA,SAAeuC,GAAtB,mC,8CAAO,iCAAAtF,EAAA,6DACL+C,EADK,EACLA,QACAqC,EAFK,EAELA,IACAC,EAHK,EAGLA,QAHK,kBASEF,GAAmB,CAAEC,MAAKC,UAAStC,aATrC,4C,sBAWA,SAAe2C,GAAtB,mC,8CAAO,mCAAA1F,EAAA,6DACL+C,EADK,EACLA,QACAqC,EAFK,EAELA,IACAI,EAHK,EAGLA,MACAC,EAJK,EAILA,SAJK,kBAWEF,GAAwB,CAAEH,MAAKI,QAAOC,WAAU1C,aAXlD,4C,sBAcA,SAAeoE,GAAtB,mC,8CAAO,iCAAAnH,EAAA,6DACLiH,EADK,EACLA,SACAC,EAFK,EAELA,SACAnE,EAHK,EAGLA,QAHK,kBASEiE,GAAyB,CAAEC,WAAUC,WAAUnE,aATjD,4C,sBAYA,SAAegE,GAAtB,mC,8CAAO,+BAAA/G,EAAA,6DACL8G,EADK,EACLA,cACA/D,EAFK,EAELA,QAFK,kBAOE8D,GAAuB,CAAEC,gBAAe/D,aAP1C,4C,sBAUA,SAAe6D,GAAtB,mC,8CAAO,+BAAA5G,EAAA,6DACLoG,EADK,EACLA,OACArD,EAFK,EAELA,QAFK,kBAOE4D,GAAsB,CAAEP,SAAQrD,aAPlC,4C,sBAUA,SAAe2D,GAAtB,mC,8CAAO,+BAAA1G,EAAA,6DACLoG,EADK,EACLA,OACArD,EAFK,EAELA,QAFK,kBAOE0D,GAAyB,CAAEL,SAAQrD,aAPrC,4C,sBAUA,SAAeyD,GAAtB,mC,8CAAO,+BAAAxG,EAAA,6DACLuG,EADK,EACLA,OACAxD,EAFK,EAELA,QAFK,kBAOEuD,GAAgB,CAAEC,SAAQxD,aAP5B,4C,sBAUA,SAAesD,GAAtB,mC,8CAAO,+BAAArG,EAAA,6DACLoG,EADK,EACLA,OACArD,EAFK,EAELA,QAFK,kBAOEoD,GAAwB,CAAEC,SAAQrD,aAPpC,4C,sBAUA,SAAemD,GAAtB,mC,8CAAO,iCAAAlG,EAAA,6DACLsB,EADK,EACLA,QACA2E,EAFK,EAELA,UACAlD,EAHK,EAGLA,QAHK,kBASEiD,GAAmB,CAAE1E,UAAS2E,YAAWlD,aAT3C,4C,sBA0BA,SAAegD,GAAtB,mC,8CAAO,+BAAA/F,EAAA,6DACL8F,EADK,EACLA,SACA/C,EAFK,EAELA,QAFK,kBAOE8C,GAAyB,CAAEC,WAAU/C,aAPvC,4C,sBAUA,SAAe6C,GAAtB,mC,8CAAO,6BAAA5F,EAAA,6DACL+C,EADK,EACLA,QADK,kBAKE4C,GAAgB,CAAE5C,aALpB,4C,sBASA,SAAexB,KAAtB,gC,8CAAO,sBAAAvB,EAAA,+EACEsD,KADF,4C,sBAYA,SAAe+D,KAAtB,gC,8CAAO,sBAAArH,EAAA,+EACEiD,KADF,4C,sBAIA,SAAeqE,GAAtB,mC,8CAAO,+BAAAtH,EAAA,6DACL+C,EADK,EACLA,QADK,SAKiBD,EAAiB,CACrCC,YANG,cAKCrC,EALD,yBAQEA,GARF,4C,sBAUA,SAAee,KAAtB,gC,8CAAO,sBAAAzB,EAAA,+EACEwB,KADF,4C,sBAIA,SAAeqB,GAAtB,mC,8CAAO,WAA2BvB,GAA3B,SAAAtB,EAAA,+EACE4C,EAAmBtB,IADrB,4C,sBAGA,SAAeqB,GAAtB,mC,8CAAO,+BAAA3C,EAAA,6DACL0C,EADK,EACLA,QACAT,EAFK,EAELA,MAFK,kBAOEQ,EAAwB,CAC7BC,UACAT,WATG,4C,sBA0BA,SAAeN,KAAtB,gC,8CAAO,sBAAA3B,EAAA,+EACE0B,KADF,4C,sBAIA,SAAeG,KAAtB,gC,8CAAO,sBAAA7B,EAAA,+EACE4B,KADF,4C,sBAIA,SAAeX,KAAtB,gC,8CAAO,sBAAAjB,EAAA,+EACEa,KADF,4C,sBAIA,SAAeyB,KAAtB,gC,8CAAO,sBAAAtC,EAAA,+EACEqC,KADF,4C,sBAIA,SAAeG,GAAtB,mC,8CAAO,WAAuBlB,GAAvB,SAAAtB,EAAA,+EACEuC,EAAejB,IADjB,4C,sBAIA,SAAeF,KAAtB,gC,8CAAO,sBAAApB,EAAA,+EACEmB,KADF,4C,sBAIA,SAAeoG,GAAtB,mC,8CAAO,WAAwBjG,GAAxB,SAAAtB,EAAA,+EACEqB,EAAgBC,IADlB,4C,sBAIA,SAAec,KAAtB,gC,8CAAO,sBAAApC,EAAA,+EACEmC,KADF,4C,sBAGA,SAAeJ,KAAtB,gC,8CAAO,sBAAA/B,EAAA,+EACE8B,KADF,4C,sBAIA,SAAeI,GAAtB,mC,8CAAO,6BAAAlC,EAAA,6DACLiC,EADK,EACLA,MADK,kBAKED,EAAoB,CAAEC,WALxB,4C,sBAYA,SAAeoB,GAAtB,mC,8CAAO,6BAAArD,EAAA,6DACLoD,EADK,EACLA,OADK,kBAKED,EAAqB,CAAEC,YALzB,4C,yDCh9BP,WACIoE,EAAW,KA0BA,KACbC,KAzBkB,WAA0C,IAAzCC,EAAwC,uDAAjC,GAAIC,EAA6B,uCAAbC,EAAa,uCACrDC,EAAQF,GAAgB,IACzBH,IACHA,EAAMM,SAASC,cAAc,OAC7BD,SAASE,KAAKC,YAAYT,GAC1BU,YAAW,WACTJ,SAASE,KAAKG,YAAYX,GAC1BA,EAAM,KACFI,GACFA,MAEDC,IAELL,EAAIY,UAAYV,EAChBF,EAAIzI,UAAY,SAYhBsJ,KATkB,WACdb,IACFM,SAASE,KAAKG,YAAYX,GAC1BA,EAAM,S,y9pBCvBV,2BAwCec,IArCf,WACE,OACE,yBAAKvJ,UAAU,UACb,yBAAKA,UAAU,gBACb,4BACE,uBAAGwJ,KAAK,IAAIC,MAAM,gBACf,IADH,iBAKF,yBAAKzJ,UAAU,MACb,4BACE,uBACEwJ,KAAK,oCACLE,OAAO,SACPC,IAAI,uBAHN,YAQF,4BACE,uBACEH,KAAK,8BACLE,OAAO,SACPC,IAAI,uBAHN,iB,gCCxBZ,2BASeC,IAPf,WACE,OACE,yBAAK5J,UAAU,gBACb,mCAAK,IAAI6J,MAAOC,cAAhB","file":"static/js/1.ab78bb3a.chunk.js","sourcesContent":["import React, { MouseEventHandler } from \"react\";\nimport \"./btnWidget.less\";\ninterface IBtnWidgetProps {\n  label: string;\n  onClick: MouseEventHandler<HTMLDivElement>;\n}\nfunction BtnWidget(props: IBtnWidgetProps) {\n  const { label, onClick } = props;\n  return (\n    <div className=\"btnWidget\" onClick={onClick}>\n      {label}\n    </div>\n  );\n}\nexport default BtnWidget;\n","import Portis from \"@portis/web3\";\nimport Web3 from \"web3\";\n\nimport config from \"@/config/index\";\nconst { nftAddress } = config;\n\nconst ERC20_METADATA_ABI = require(\"../abi/ERC20Metadata.json\");\nconst ERC20_ABI = require(\"../abi/ERC20.json\");\nconst ERC721_ENUMERABLE_ABI = require(\"../abi/ERC721Enumerable.json\");\nconst ERC165_ABI = require(\"../abi/ERC165.json\");\n\nconst ERC721_ABI = require(\"../abi/ERC721.json\");\nconst DBR = require(\"../abi/DBR.json\");\ndeclare global {\n  interface Window {\n    ethereum: any;\n    web3: any;\n  }\n}\n\nif (window.ethereum) {\n  window.web3 = new Web3(window.ethereum);\n  window.ethereum.enable(); // should wait?\n}\n\nif (!window.web3) {\n  const DAPP_ID = \"a0fa4f71-2d8e-4a67-baa6-33ab41c3ba26\";\n  const portis = new Portis(DAPP_ID, \"mainnet\");\n  window.web3 = new Web3(portis.provider);\n}\n\nconst web3 = new Web3(window.web3.currentProvider);\n\nconst NFTFY_CONTRACT_RINKEBY = \"0xc0D1946C1754d2F94dE4Cf52deF7162f6611316D\";\n\n// const ERC721_METADATA_INTERFACE_ID = '0x5b5e139f';\nconst ERC721_INTERFACE_ID = \"0x80ac58cd\";\n// const ERC721_ENUMERABLE_INTERFACE_ID = '0x780e9d63';\n\nexport async function getNftfyContract(): Promise<string> {\n  const network = await web3.eth.net.getNetworkType();\n  switch (network) {\n    // TODO main\n    case \"main\":\n      return \"0x97fb1e97A05aF8ff862C7f5fA9e28C716660d632\";\n    case \"rinkeby\":\n      return NFTFY_CONTRACT_RINKEBY;\n    default:\n      throw new Error(\"Unsupported network\");\n  }\n}\n\nfunction toCents(amount: string, decimals: number): string {\n  return (Number(amount) * 10 ** decimals).toFixed(0);\n}\n\nfunction fromCents(amount: string, decimals: number): string {\n  return (Number(amount) / 10 ** decimals).toFixed(decimals);\n}\n\nexport function isValidAddress(address: string): boolean {\n  return web3.utils.isAddress(address);\n}\n\nexport async function getAccounts(): Promise<string[]> {\n  return new Promise((resolve, reject) => {\n    web3.eth.getAccounts((error, accounts) => {\n      if (error) return reject(error);\n      return resolve(accounts);\n    });\n  });\n}\n\nexport async function getETHBalance(address: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    web3.eth.getBalance(address, \"latest\", (error, balance) => {\n      if (error) return reject(error);\n      return resolve(web3.utils.fromWei(balance, \"ether\"));\n    });\n  });\n}\n\nexport async function transferETH(\n  account: string,\n  address: string,\n  amount: string\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    web3.eth\n      .sendTransaction({\n        from: account,\n        to: address,\n        value: web3.utils.toWei(amount, \"ether\"),\n      })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\n\nasync function ERC20_name(contract: string): Promise<string> {\n  const abi = new window.web3.eth.Contract(ERC20_METADATA_ABI, contract);\n  return abi.methods.name().call();\n}\n\nasync function ERC20_symbol(contract: string): Promise<string> {\n  const abi = new window.web3.eth.Contract(ERC20_METADATA_ABI, contract);\n  return abi.methods.symbol().call();\n}\n\nasync function ERC20_decimals(contract: string): Promise<number> {\n  const abi = new window.web3.eth.Contract(ERC20_METADATA_ABI, contract);\n  return Number(await abi.methods.decimals().call());\n}\n\nasync function ERC20_balanceOf(\n  contract: string,\n  address: string\n): Promise<string> {\n  const abi = new window.web3.eth.Contract(ERC20_ABI, contract);\n  return abi.methods.balanceOf(address).call();\n}\n\nasync function ERC20_transfer(\n  account: string,\n  contract: string,\n  address: string,\n  amount: string\n): Promise<void> {\n  const abi = new window.web3.eth.Contract(ERC20_ABI, contract);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .transfer(address, amount)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\n\nexport async function getERC20Name(contract: string): Promise<string> {\n  return ERC20_name(contract);\n}\n\nexport async function getERC20Symbol(contract: string): Promise<string> {\n  return ERC20_symbol(contract);\n}\n\nexport async function getERC20Balance({\n  contract,\n  account,\n}: {\n  contract: string;\n  account: string;\n}): Promise<string> {\n  const decimals = await ERC20_decimals(contract);\n  const balance = await ERC20_balanceOf(contract, account);\n  return fromCents(balance, decimals);\n}\n\nexport async function transferERC20(\n  account: string,\n  contract: string,\n  address: string,\n  amount: string\n): Promise<void> {\n  const decimals = await ERC20_decimals(contract);\n  return ERC20_transfer(account, contract, address, toCents(amount, decimals));\n}\n\nasync function ERC165_supportsInterface(\n  contract: string,\n  interfaceId: string\n): Promise<boolean> {\n  const abi = new window.web3.eth.Contract(ERC165_ABI, contract);\n  return abi.methods.supportsInterface(interfaceId).call();\n}\n\nasync function ERC721_name(): Promise<string> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.name().call();\n}\n\nasync function ERC721_symbol(): Promise<string> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.symbol().call();\n}\n\nasync function ERC721_tokenURI(tokenId: string): Promise<string> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.baseTokenURI(tokenId).call();\n}\nasync function ERC721_price(): Promise<string> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.DBRPrice().call();\n}\nasync function ERC721_maxDBRPurchase(): Promise<string> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.maxDBRPurchase().call();\n}\nasync function ERC721_maxDBRs(): Promise<string> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.maxDBRs().call();\n}\n\nasync function ERC721_saleIsActive(): Promise<boolean> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.saleIsActive().call();\n}\nasync function ERC721_tokenByIndex({ index }: { index: string }) {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.tokenByIndex(index).call();\n}\nasync function ERC721_reserved() {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.reserved().call();\n}\nasync function ERC721_totalSupply(): Promise<string> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.totalSupply().call();\n}\nasync function ERC721_owner() {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.owner().call();\n}\n\nasync function ERC721_ownerOf(tokenId: string) {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.ownerOf(tokenId).call();\n}\nasync function ERC721_isApprovedForAll({\n  _owener,\n  index,\n}: {\n  _owener: string;\n  index: string;\n}) {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.isApprovedForAll(_owener, index).call();\n}\n\nasync function ERC721_getMyAssets({\n  _owener,\n  index,\n}: {\n  _owener: string;\n  index: string;\n}) {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.getMyAssets(_owener, index).call();\n}\n\nasync function ERC721_getApproved(tokenId: string) {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods.getApproved(tokenId).call();\n}\n\nasync function ERC721_balanceOf({\n  account,\n}: {\n  account: string;\n}): Promise<string> {\n  const abi = new window.web3.eth.Contract(ERC721_ABI, nftAddress);\n  const balance = await abi.methods.balanceOf(account).call();\n  return balance;\n}\n\nasync function ERC721_allfrozen(): Promise<boolean> {\n  const abi = new window.web3.eth.Contract(ERC721_ENUMERABLE_ABI, nftAddress);\n  return abi.methods.allfrozen().call();\n}\n\nasync function ERC721_walletOfOwner({\n  _owner,\n}: {\n  _owner: string;\n}): Promise<string> {\n  const abi = new window.web3.eth.Contract(ERC721_ENUMERABLE_ABI, nftAddress);\n  return abi.methods.walletOfOwner(_owner).call();\n}\n\nasync function ERC721_admins({\n  address,\n}: {\n  address: string;\n}): Promise<boolean> {\n  const abi = new window.web3.eth.Contract(ERC721_ENUMERABLE_ABI, nftAddress);\n  return abi.methods.admins(address).call();\n}\nasync function ERC721_baseTokenURI(): Promise<string> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return abi.methods._baseTokenURI().call();\n}\n\nasync function ERC721_tokenOfOwnerByIndex({\n  account,\n  index,\n}: {\n  account: string;\n  index: string;\n}): Promise<string> {\n  const abi = new window.web3.eth.Contract(ERC721_ENUMERABLE_ABI, nftAddress);\n  return abi.methods.tokenOfOwnerByIndex(account, index).call();\n}\n\nasync function ERC721_mint({\n  numberOfTokens,\n  price,\n  account,\n}: {\n  numberOfTokens: string;\n  account: string;\n  price: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .mintDBRs(numberOfTokens)\n      .send({ from: account, value: +price * +numberOfTokens, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\n\nasync function ERC721_flipSaleState({\n  account,\n}: {\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .flipSaleState()\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\nasync function ERC721_approve({\n  to,\n  tokenId,\n  account,\n}: {\n  to: string;\n  tokenId: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .approve(to, tokenId)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\nasync function ERC721_disableAdmin({\n  _addr,\n  account,\n}: {\n  _addr: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .disableAdmin(_addr)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\nasync function ERC721_enableAdmin({\n  _addr,\n  account,\n}: {\n  _addr: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .enableAdmin(_addr)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\nasync function ERC721_freeze({\n  tokenId,\n  account,\n}: {\n  tokenId: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .freeze(tokenId)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\nasync function ERC721_freezeAll({\n  account,\n}: {\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .freezeAll()\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\nasync function ERC721_renounceOwnership({\n  account,\n}: {\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .renounceOwnership()\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\nasync function ERC721_reserveDBRs({\n  account,\n  _to,\n  _amount,\n}: {\n  account: string;\n  _to: string;\n  _amount: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .reserveDBRs(_to, _amount)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\nasync function ERC721_safeTransferFrom({\n  account,\n  _to,\n  _from,\n  _tokenId,\n}: {\n  account: string;\n  _to: string;\n  _from: string;\n  _tokenId: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .safeTransferFrom(_to, _from, _tokenId)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\nasync function ERC721_withdraw({\n  account,\n}: {\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .withdraw()\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\n\nasync function ERC721_transferOwnership({\n  newOwner,\n  account,\n}: {\n  newOwner: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .transferOwnership(newOwner)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\n\nasync function ERC721_transferFrom({\n  _to,\n  _from,\n  _tokenId,\n  account,\n}: {\n  _to: string;\n  _from: string;\n  _tokenId: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .transferFrom(_to, _from, _tokenId)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\n\nasync function ERC721_setTokenURI({\n  tokenId,\n  _tokenURI,\n  account,\n}: {\n  tokenId: string;\n  _tokenURI: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .setTokenURI(tokenId, _tokenURI)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\n\nasync function ERC721_setReserveAmount({\n  _value,\n  account,\n}: {\n  _value: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .setReserveAmount(_value)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\n\nasync function ERC721_setPrice({\n  _price,\n  account,\n}: {\n  _price: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .setPrice(_price)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\n\nasync function ERC721_setMaxTokenAmount({\n  _value,\n  account,\n}: {\n  _value: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .setMaxTokenAmount(_value)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\nasync function ERC721_setMaxPurchase({\n  _value,\n  account,\n}: {\n  _value: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .setMaxPurchase(_value)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\nasync function ERC721_setBaseTokenURI({\n  baseTokenURI_,\n  account,\n}: {\n  baseTokenURI_: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .setBaseTokenURI(baseTokenURI_)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\n\n// todo\nasync function ERC721_setApprovalForAll({\n  operator,\n  approved,\n  account,\n}: {\n  operator: string;\n  approved: string;\n  account: string;\n}): Promise<void> {\n  const abi = new window.web3.eth.Contract(DBR, nftAddress);\n  return new Promise((resolve, reject) => {\n    abi.methods\n      .setApprovalForAll(operator, approved)\n      .send({ from: account, gas: 3000000 })\n      .once(\"confirmation\", (confNumber: any, receipt: any) => resolve())\n      .once(\"error\", reject);\n  });\n}\n\nexport async function getERC721TokenIdByIndex({\n  account,\n  index,\n}: {\n  account: string;\n  index: number;\n}): Promise<string> {\n  return ERC721_tokenOfOwnerByIndex({\n    account,\n    index: String(index),\n  });\n}\n\nexport async function supportsInterface(contract: string): Promise<boolean> {\n  return ERC165_supportsInterface(contract, ERC721_INTERFACE_ID);\n}\n\n// post erc721\nexport async function approve({\n  to,\n  tokenId,\n  account,\n}: {\n  to: string;\n  tokenId: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_approve({ to, tokenId, account });\n}\nexport async function disableAdmin({\n  _addr,\n  account,\n}: {\n  _addr: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_disableAdmin({ _addr, account });\n}\n\nexport async function enableAdmin({\n  _addr,\n  account,\n}: {\n  _addr: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_enableAdmin({ _addr, account });\n}\n\nexport async function flipSaleState({\n  account,\n}: {\n  account: string;\n}): Promise<void> {\n  return ERC721_flipSaleState({ account });\n}\n\nexport async function freeze({\n  tokenId,\n  account,\n}: {\n  tokenId: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_freeze({ tokenId, account });\n}\n\nexport async function freezeAll({\n  account,\n}: {\n  account: string;\n}): Promise<void> {\n  return ERC721_freezeAll({ account });\n}\n\nexport async function mint({\n  numberOfTokens,\n  price,\n  account,\n}: {\n  numberOfTokens: string;\n  account: string;\n  price: string;\n}): Promise<void> {\n  return ERC721_mint({ numberOfTokens, account, price });\n}\n\nexport async function renounceOwnership({\n  account,\n}: {\n  account: string;\n}): Promise<void> {\n  return ERC721_renounceOwnership({ account });\n}\n\nexport async function reserveDBRs({\n  account,\n  _to,\n  _amount,\n}: {\n  account: string;\n  _to: string;\n  _amount: string;\n}): Promise<void> {\n  return ERC721_reserveDBRs({ _to, _amount, account });\n}\nexport async function safeTransferFrom({\n  account,\n  _to,\n  _from,\n  _tokenId,\n}: {\n  account: string;\n  _to: string;\n  _from: string;\n  _tokenId: string;\n}): Promise<void> {\n  return ERC721_safeTransferFrom({ _to, _from, _tokenId, account });\n}\n\nexport async function setApprovalForAll({\n  operator,\n  approved,\n  account,\n}: {\n  operator: string;\n  approved: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_setApprovalForAll({ operator, approved, account });\n}\n\nexport async function setBaseTokenURI({\n  baseTokenURI_,\n  account,\n}: {\n  baseTokenURI_: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_setBaseTokenURI({ baseTokenURI_, account });\n}\n\nexport async function setMaxPurchase({\n  _value,\n  account,\n}: {\n  _value: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_setMaxPurchase({ _value, account });\n}\n\nexport async function setMaxTokenAmount({\n  _value,\n  account,\n}: {\n  _value: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_setMaxTokenAmount({ _value, account });\n}\n\nexport async function setPrice({\n  _price,\n  account,\n}: {\n  _price: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_setPrice({ _price, account });\n}\n\nexport async function setReserveAmount({\n  _value,\n  account,\n}: {\n  _value: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_setReserveAmount({ _value, account });\n}\n\nexport async function setTokenURI({\n  tokenId,\n  _tokenURI,\n  account,\n}: {\n  tokenId: string;\n  _tokenURI: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_setTokenURI({ tokenId, _tokenURI, account });\n}\n\nexport async function transferFrom({\n  _to,\n  _from,\n  _tokenId,\n  account,\n}: {\n  _to: string;\n  _from: string;\n  _tokenId: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_transferFrom({ _to, _from, _tokenId, account });\n}\n\nexport async function transferOwnership({\n  newOwner,\n  account,\n}: {\n  newOwner: string;\n  account: string;\n}): Promise<void> {\n  return ERC721_transferOwnership({ newOwner, account });\n}\n\nexport async function withdraw({\n  account,\n}: {\n  account: string;\n}): Promise<void> {\n  return ERC721_withdraw({ account });\n}\n\n// get\nexport async function baseTokenURI(): Promise<string> {\n  return ERC721_baseTokenURI();\n}\n\nexport async function admins({\n  address,\n}: {\n  address: string;\n}): Promise<boolean> {\n  return ERC721_admins({ address });\n}\n\nexport async function allFrozen(): Promise<boolean> {\n  return ERC721_allfrozen();\n}\n\nexport async function getERC721Balance({\n  account,\n}: {\n  account: string;\n}): Promise<string> {\n  const balance = await ERC721_balanceOf({\n    account,\n  });\n  return balance;\n}\nexport async function DBRPrice(): Promise<string> {\n  return ERC721_price();\n}\n\nexport async function getApproved(tokenId: string): Promise<string> {\n  return ERC721_getApproved(tokenId);\n}\nexport async function isApprovedForAll({\n  _owener,\n  index,\n}: {\n  _owener: string;\n  index: string;\n}): Promise<string> {\n  return ERC721_isApprovedForAll({\n    _owener,\n    index,\n  });\n}\n\nexport async function getMyAssets({\n  _owener,\n  index,\n}: {\n  _owener: string;\n  index: string;\n}): Promise<string> {\n  return ERC721_getMyAssets({\n    _owener,\n    index,\n  });\n}\n\nexport async function maxDBRPurchase(): Promise<string> {\n  return ERC721_maxDBRPurchase();\n}\n\nexport async function maxDBRs(): Promise<string> {\n  return ERC721_maxDBRs();\n}\n\nexport async function name(): Promise<string> {\n  return ERC721_name();\n}\n\nexport async function owner(): Promise<string> {\n  return ERC721_owner();\n}\n\nexport async function ownerOf(tokenId: string): Promise<string> {\n  return ERC721_ownerOf(tokenId);\n}\n\nexport async function symbol(): Promise<string> {\n  return ERC721_symbol();\n}\n\nexport async function tokenURI(tokenId: string): Promise<string> {\n  return ERC721_tokenURI(tokenId);\n}\n\nexport async function totalSupply(): Promise<string> {\n  return ERC721_totalSupply();\n}\nexport async function saleIsActive(): Promise<boolean> {\n  return ERC721_saleIsActive();\n}\n\nexport async function tokenByIndex({\n  index,\n}: {\n  index: string;\n}): Promise<boolean> {\n  return ERC721_tokenByIndex({ index });\n}\n\nexport async function reserved(): Promise<boolean> {\n  return ERC721_reserved();\n}\n\nexport async function walletOfOwner({\n  _owner,\n}: {\n  _owner: string;\n}): Promise<string> {\n  return ERC721_walletOfOwner({ _owner });\n}\n","import \"./index.less\";\nlet div: any = null;\n\nexport const show = (text = \"\", mtime?: number, fn?: any) => {\n  const _time = mtime ? mtime : 3000;\n  if (!div) {\n    div = document.createElement(\"div\");\n    document.body.appendChild(div);\n    setTimeout(() => {\n      document.body.removeChild(div);\n      div = null;\n      if (fn) {\n        fn();\n      }\n    }, _time);\n  }\n  div.innerHTML = text;\n  div.className = \"toast\";\n};\n\nexport const hide = () => {\n  if (div) {\n    document.body.removeChild(div);\n    div = null;\n  }\n};\n\nexport default {\n  show,\n  hide,\n};\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport \"./headerWidget.less\";\nfunction HeaderWidget() {\n  return (\n    <div className=\"header\">\n      <div className=\"headerWidget\">\n        <h1>\n          <a href=\"/\" title=\"DontBuyRocks\">\n            {\" \"}\n            DontBuyRocks\n          </a>\n        </h1>\n        <div className=\"fr\">\n          <h2>\n            <a\n              href=\"https://twitter.com/DONOTBUYROCKS\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Twitter\n            </a>\n          </h2>\n          <h2>\n            <a\n              href=\"https://discord.gg/Yx6BCpxW\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Discord\n            </a>\n          </h2>\n          {/* <h2>\n            <Link to=\"/about\">About Us</Link>\n          </h2> */}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default HeaderWidget;\n","import React from \"react\";\nimport \"./footerWidget.less\";\nfunction FooterWidget() {\n  return (\n    <div className=\"footerWidget\">\n      <p>©{new Date().getFullYear()} DontBuyRocks on the Fantom</p>\n    </div>\n  );\n}\nexport default FooterWidget;\n"],"sourceRoot":""}